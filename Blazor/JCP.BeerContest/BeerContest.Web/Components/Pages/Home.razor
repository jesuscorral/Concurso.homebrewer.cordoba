@page "/"
@using BeerContest.Application.Features.Contests.Queries.GetActiveContests
@using BeerContest.Domain.Models
@using MediatR
@inject IMediator Mediator

<PageTitle>Home - Beer Contest</PageTitle>

<div class="container">
    <div class="row mb-5">
        <div class="col-12">
            <div class="jumbotron bg-light p-5 rounded">
                <h1 class="display-4">Welcome to the Artisanal Beer Contest!</h1>
                <p class="lead">Showcase your brewing skills and compete with the best artisanal brewers.</p>
                <hr class="my-4">
                <p>Register your beers, participate in the contest, and get feedback from expert judges.</p>
                <a class="btn btn-primary btn-lg" href="contests" role="button">View Contests</a>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12">
            <h2>Active Contests</h2>
        </div>
    </div>

    @if (activeContests == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!activeContests.Any())
    {
        <div class="alert alert-info">
            There are no active contests at the moment. Please check back later.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var contest in activeContests)
            {
                <div class="col">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title">@contest.Name</h5>
                            <h6 class="card-subtitle mb-2 text-muted">@contest.Date.ToString("MMMM d, yyyy")</h6>
                            <p class="card-text">@contest.Description</p>
                            <p class="card-text"><small class="text-muted">Location: @contest.Location</small></p>
                            <p class="card-text">
                                <small class="text-muted">
                                    Registration: @contest.RegistrationStartDate.ToString("MMM d") - @contest.RegistrationEndDate.ToString("MMM d, yyyy")
                                </small>
                            </p>
                        </div>
                        <div class="card-footer">
                            <a href="@($"contests/{contest.Id}")" class="btn btn-primary">View Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    <div class="row mt-5">
        <div class="col-md-4 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Register Your Beer</h5>
                    <p class="card-text">Submit your artisanal beer to participate in the contest.</p>
                    <a href="register-beer" class="btn btn-outline-primary">Register Now</a>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Contest Rules</h5>
                    <p class="card-text">Learn about the rules and guidelines for the beer contest.</p>
                    <a href="rules" class="btn btn-outline-primary">View Rules</a>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Previous Winners</h5>
                    <p class="card-text">Check out the winners from previous beer contests.</p>
                    <a href="winners" class="btn btn-outline-primary">View Winners</a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private IEnumerable<Contest> activeContests;

    protected override async Task OnInitializedAsync()
    {
        var query = new GetActiveContestsQuery();
        activeContests = await Mediator.Send(query);
    }
}
