@page "/Account/Login"
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Components.Web
@using System.Web
@inject NavigationManager NavigationManager
@inject IConfiguration Configuration

<PageTitle>Login</PageTitle>

<div class="container mt-5">
    <div class="auth-container">
        <div class="auth-card card">
            <div class="card-header">
                <h3 class="mb-0">Welcome Back</h3>
            </div>
            <div class="card-body">
                <div class="text-center mb-4">
                    <i class="fa fa-beer fa-3x text-amber mb-3"></i>
                    <p class="lead">Sign in to access the Beer Contest platform</p>
                </div>
                
                <div class="d-grid gap-2 mt-4">
                    <a href="@GoogleLoginUrl" class="social-login-btn google-btn">
                        <i class="fab fa-google"></i> Sign in with Google
                    </a>
                </div>
                
                <div class="auth-divider">
                    <span>Beer Contest</span>
                </div>
                
                <div class="mt-4 text-center">
                    <p>Don't have an account? <a href="Account/Register" class="text-amber">Register here</a></p>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }

    private string GoogleLoginUrl
    {
        get
        {
            // Ensure we have a valid return URL
            var returnUrl = string.IsNullOrEmpty(ReturnUrl) ? "/" : ReturnUrl;
            return $"/api/account/login?returnUrl={HttpUtility.UrlEncode(returnUrl)}";
        }
    }
}